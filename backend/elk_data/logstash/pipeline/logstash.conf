input {
  # file {
  #   path => "/logs/pong.logs"
  #   start_position => "beginning"
  # }
    tcp {
      port    => 5959
      codec   => json
  }
}

filter {
  # if "stacktrace" in [message] {
    grok {
      match => {
        "message" => "\[%{TIMESTAMP_ISO8601:timestamp}\]::\[%{LOGLEVEL:log_level}\]::\[%{DATA:module}\]=> \(%{GREEDYDATA:log_message}\)\n%{GREEDYDATA:stacktrace}"
      }
      # Evite les redondances
      # overwrite => [ "message" ]
    }
  # }
  # else {
    grok {
      match => {
        "message" => "\[%{TIMESTAMP_ISO8601:timestamp}\]::\[%{LOGLEVEL:log_level}\]::\[%{DATA:module}\]=> \(%{GREEDYDATA:log_message}\)"
      }
    }
    # overwrite => [ "message" ]
  # }

  date {
    match => [ "timestamp", "YYYY/MM/dd HH:mm:ss", "ISO8601" ]
    target => "@timestamp"
    timezone => "UTC"
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    data_stream => true
    data_stream_type => "logs"
    data_stream_dataset => "pong"
    data_stream_namespace => "default"
    ssl_enabled => false
  }
}
