# +----------------+       +-----------+       +---------------+       +----------+
# | Pong, db etc...| ----> | Logstash  | ----> | Elasticsearch | ----> |  Kibana  |
# |    logging     | ----> |  server   | ----> |     finder    | ----> |visualizer|
# +----------------+       +-----------+       +---------------+       +----------+

input {
    # File means that log gonna read from files (name x.log)
    file {
        path            => "/usr/share/logstash/logs/back.logs"
        start_position  => "beginning"
        sincedb_path    => "/dev/null"
    }
    
}

output {
    elasticsearch {
        hosts => ["elasticsearch:9200"]
        index => "pong2-logs-%{+YYYY.MM.dd}"
    }
    stdout { codec => rubydebug }
}


filter {
    # Add the 'is_successful' field based on the 'status' field
    if [status] == 200 {
        mutate {
            add_field => { "is_successful" => "true" }
        }
    }
    else {
        mutate {
            add_field => { "is_successful" => "false" }
        }
    }
    grok { 
        match => { "message" => "\[%{TIMESTAMP_ISO8601:timestamp}\]::\[%{LOGLEVEL:loglevel}\]::| \[%{WORD:funcName}\]::\[%{WORD:name}\]=> %{GREEDYDATA:message}" }
    }
}
filter {
  if [message] =~ /^{.*}$/ {
    json {
      source => "message"
    }
  }
  mutate {
    remove_field => ["event", "message", "emailAddress"]
    add_field => { "env" => "development" }
  }
}