
services:
  web:
    container_name: backend
    build: ./project
    volumes:
      - ./project/:/usr/src/project/
    ports:
      - 8000:8000
    env_file:
      - ./.utils/.env
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    links:
      - db
    networks:
      - transcendance

  db:
    image: postgres:15
    container_name: database
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=ccouliba
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=db1
      - POSTGRES_PORT='5432'
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ccouliba -d db1'"]
      interval: 10s
      timeout: 4s
      retries: 3  
    networks:
     - transcendance

  # filebeat:
  #   image: docker.elastic.co/beats/filebeat:8.14.3
  #   command: ["filebeat", "-e", "-d", "*"]
  #   user: root
  #   volumes:
  #     - ./elk_data/filelebeat.yml:/usr/share/filebeat/filebeat.yml
  #     - ./project/logs:/logs/
  #   networks:
  #     - elk
  #   depends_on:
  #     logstash:
  #       condition: service_healthy
  
  # # Elasticsearch is a search engine
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    volumes:
      - elk_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health"]
      interval: 20s
      timeout: 10s
      retries: 3
    networks:
      - elk

  # # Logstash is a server-side data processing pipeline
  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:8.14.3
    user: root
    volumes:
      - ./project/logstash/pipeline/logstash_1.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      
      #- ./elk_data/logstash/pipeline/logstash_2.conf/:/usr/share/logstash/pipeline/file_logs.conf:ro
      - ./project/logs:/usr/share/logstash/logs
    ports:
      - 5959:5959/tcp
      - 5044:5044
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9600/_node/stats"]
      interval: 20s
      timeout: 5s
      retries: 4
    networks:
      - elk
      - transcendance

  # # Kibana is used for data visualization
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.14.3
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elk

volumes:
  postgres_data:
  elk_data:
    driver: local
  logs:
    driver: local

networks:
  transcendance:
    name: transcendance
    driver: bridge
  elk:
    name: elk
    driver: bridge